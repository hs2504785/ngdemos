{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { forwardRef, Component, Inject, Input, ContentChildren, EventEmitter, ChangeDetectionStrategy, ViewEncapsulation, ViewChild, Output, NgModule } from '@angular/core';\nimport * as i1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i3 from 'primeng/tooltip';\nimport { TooltipModule } from 'primeng/tooltip';\nimport * as i2 from 'primeng/ripple';\nimport { RippleModule } from 'primeng/ripple';\nimport { PrimeTemplate, SharedModule } from 'primeng/api';\nimport { DomHandler } from 'primeng/dom';\n\nfunction TabPanel_div_0_ng_container_2_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nfunction TabPanel_div_0_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, TabPanel_div_0_ng_container_2_ng_container_1_Template, 1, 0, \"ng-container\", 3);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r1.contentTemplate);\n  }\n}\n\nfunction TabPanel_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 1);\n    i0.ɵɵprojection(1);\n    i0.ɵɵtemplate(2, TabPanel_div_0_ng_container_2_Template, 2, 1, \"ng-container\", 2);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"hidden\", !ctx_r0.selected);\n    i0.ɵɵattribute(\"id\", ctx_r0.id)(\"aria-hidden\", !ctx_r0.selected)(\"aria-labelledby\", ctx_r0.id + \"-label\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.contentTemplate && (ctx_r0.cache ? ctx_r0.loaded : ctx_r0.selected));\n  }\n}\n\nconst _c0 = [\"*\"];\nconst _c1 = [\"navbar\"];\nconst _c2 = [\"inkbar\"];\n\nfunction TabView_ng_template_3_li_0_ng_container_2_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 16);\n  }\n\n  if (rf & 2) {\n    const tab_r3 = i0.ɵɵnextContext(3).$implicit;\n    i0.ɵɵproperty(\"ngClass\", tab_r3.leftIcon);\n  }\n}\n\nfunction TabView_ng_template_3_li_0_ng_container_2_span_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 17);\n  }\n\n  if (rf & 2) {\n    const tab_r3 = i0.ɵɵnextContext(3).$implicit;\n    i0.ɵɵproperty(\"ngClass\", tab_r3.rightIcon);\n  }\n}\n\nfunction TabView_ng_template_3_li_0_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, TabView_ng_template_3_li_0_ng_container_2_span_1_Template, 1, 1, \"span\", 13);\n    i0.ɵɵelementStart(2, \"span\", 14);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(4, TabView_ng_template_3_li_0_ng_container_2_span_4_Template, 1, 1, \"span\", 15);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const tab_r3 = i0.ɵɵnextContext(2).$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", tab_r3.leftIcon);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(tab_r3.header);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", tab_r3.rightIcon);\n  }\n}\n\nfunction TabView_ng_template_3_li_0_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nfunction TabView_ng_template_3_li_0_span_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r15 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"span\", 18);\n    i0.ɵɵlistener(\"click\", function TabView_ng_template_3_li_0_span_4_Template_span_click_0_listener($event) {\n      i0.ɵɵrestoreView(_r15);\n      const tab_r3 = i0.ɵɵnextContext(2).$implicit;\n      const ctx_r13 = i0.ɵɵnextContext();\n      return ctx_r13.close($event, tab_r3);\n    });\n    i0.ɵɵelementEnd();\n  }\n}\n\nconst _c3 = function (a0, a1) {\n  return {\n    \"p-highlight\": a0,\n    \"p-disabled\": a1\n  };\n};\n\nfunction TabView_ng_template_3_li_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r18 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"li\", 8);\n    i0.ɵɵelementStart(1, \"a\", 9);\n    i0.ɵɵlistener(\"click\", function TabView_ng_template_3_li_0_Template_a_click_1_listener($event) {\n      i0.ɵɵrestoreView(_r18);\n      const tab_r3 = i0.ɵɵnextContext().$implicit;\n      const ctx_r16 = i0.ɵɵnextContext();\n      return ctx_r16.open($event, tab_r3);\n    })(\"keydown.enter\", function TabView_ng_template_3_li_0_Template_a_keydown_enter_1_listener($event) {\n      i0.ɵɵrestoreView(_r18);\n      const tab_r3 = i0.ɵɵnextContext().$implicit;\n      const ctx_r19 = i0.ɵɵnextContext();\n      return ctx_r19.open($event, tab_r3);\n    });\n    i0.ɵɵtemplate(2, TabView_ng_template_3_li_0_ng_container_2_Template, 5, 3, \"ng-container\", 10);\n    i0.ɵɵtemplate(3, TabView_ng_template_3_li_0_ng_container_3_Template, 1, 0, \"ng-container\", 11);\n    i0.ɵɵtemplate(4, TabView_ng_template_3_li_0_span_4_Template, 1, 0, \"span\", 12);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const tab_r3 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵclassMap(tab_r3.headerStyleClass);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(16, _c3, tab_r3.selected, tab_r3.disabled))(\"ngStyle\", tab_r3.headerStyle);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"pTooltip\", tab_r3.tooltip)(\"tooltipPosition\", tab_r3.tooltipPosition)(\"positionStyle\", tab_r3.tooltipPositionStyle)(\"tooltipStyleClass\", tab_r3.tooltipStyleClass);\n    i0.ɵɵattribute(\"id\", tab_r3.id + \"-label\")(\"aria-selected\", tab_r3.selected)(\"aria-controls\", tab_r3.id)(\"aria-selected\", tab_r3.selected)(\"tabindex\", tab_r3.disabled ? null : \"0\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !tab_r3.headerTemplate);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", tab_r3.headerTemplate);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", tab_r3.closable);\n  }\n}\n\nfunction TabView_ng_template_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, TabView_ng_template_3_li_0_Template, 5, 19, \"li\", 7);\n  }\n\n  if (rf & 2) {\n    const tab_r3 = ctx.$implicit;\n    i0.ɵɵproperty(\"ngIf\", !tab_r3.closed);\n  }\n}\n\nlet idx = 0;\n\nclass TabPanel {\n  constructor(tabView, viewContainer, cd) {\n    this.viewContainer = viewContainer;\n    this.cd = cd;\n    this.cache = true;\n    this.tooltipPosition = 'top';\n    this.tooltipPositionStyle = 'absolute';\n    this.id = `p-tabpanel-${idx++}`;\n    this.tabView = tabView;\n  }\n\n  ngAfterContentInit() {\n    this.templates.forEach(item => {\n      switch (item.getType()) {\n        case 'header':\n          this.headerTemplate = item.template;\n          break;\n\n        case 'content':\n          this.contentTemplate = item.template;\n          break;\n\n        default:\n          this.contentTemplate = item.template;\n          break;\n      }\n    });\n  }\n\n  get selected() {\n    return this._selected;\n  }\n\n  set selected(val) {\n    this._selected = val;\n\n    if (!this.loaded) {\n      this.cd.detectChanges();\n    }\n\n    if (val) this.loaded = true;\n  }\n\n  get disabled() {\n    return this._disabled;\n  }\n\n  set disabled(disabled) {\n    this._disabled = disabled;\n    this.tabView.cd.markForCheck();\n  }\n\n  get header() {\n    return this._header;\n  }\n\n  set header(header) {\n    this._header = header;\n    this.tabView.cd.markForCheck();\n  }\n\n  get leftIcon() {\n    return this._leftIcon;\n  }\n\n  set leftIcon(leftIcon) {\n    this._leftIcon = leftIcon;\n    this.tabView.cd.markForCheck();\n  }\n\n  get rightIcon() {\n    return this._rightIcon;\n  }\n\n  set rightIcon(rightIcon) {\n    this._rightIcon = rightIcon;\n    this.tabView.cd.markForCheck();\n  }\n\n  ngOnDestroy() {\n    this.view = null;\n  }\n\n}\n\nTabPanel.ɵfac = function TabPanel_Factory(t) {\n  return new (t || TabPanel)(i0.ɵɵdirectiveInject(forwardRef(() => TabView)), i0.ɵɵdirectiveInject(i0.ViewContainerRef), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n};\n\nTabPanel.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: TabPanel,\n  selectors: [[\"p-tabPanel\"]],\n  contentQueries: function TabPanel_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, PrimeTemplate, 4);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.templates = _t);\n    }\n  },\n  inputs: {\n    closable: \"closable\",\n    headerStyle: \"headerStyle\",\n    headerStyleClass: \"headerStyleClass\",\n    cache: \"cache\",\n    tooltip: \"tooltip\",\n    tooltipPosition: \"tooltipPosition\",\n    tooltipPositionStyle: \"tooltipPositionStyle\",\n    tooltipStyleClass: \"tooltipStyleClass\",\n    selected: \"selected\",\n    disabled: \"disabled\",\n    header: \"header\",\n    leftIcon: \"leftIcon\",\n    rightIcon: \"rightIcon\"\n  },\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 1,\n  consts: [[\"class\", \"p-tabview-panel\", \"role\", \"tabpanel\", 3, \"hidden\", 4, \"ngIf\"], [\"role\", \"tabpanel\", 1, \"p-tabview-panel\", 3, \"hidden\"], [4, \"ngIf\"], [4, \"ngTemplateOutlet\"]],\n  template: function TabPanel_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵtemplate(0, TabPanel_div_0_Template, 3, 5, \"div\", 0);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", !ctx.closed);\n    }\n  },\n  directives: [i1.NgIf, i1.NgTemplateOutlet],\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TabPanel, [{\n    type: Component,\n    args: [{\n      selector: 'p-tabPanel',\n      template: `\n        <div [attr.id]=\"id\" class=\"p-tabview-panel\" [hidden]=\"!selected\"\n            role=\"tabpanel\" [attr.aria-hidden]=\"!selected\" [attr.aria-labelledby]=\"id + '-label'\" *ngIf=\"!closed\">\n            <ng-content></ng-content>\n            <ng-container *ngIf=\"contentTemplate && (cache ? loaded : selected)\">\n                <ng-container *ngTemplateOutlet=\"contentTemplate\"></ng-container>\n            </ng-container>\n        </div>\n    `\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [forwardRef(() => TabView)]\n      }]\n    }, {\n      type: i0.ViewContainerRef\n    }, {\n      type: i0.ChangeDetectorRef\n    }];\n  }, {\n    closable: [{\n      type: Input\n    }],\n    headerStyle: [{\n      type: Input\n    }],\n    headerStyleClass: [{\n      type: Input\n    }],\n    cache: [{\n      type: Input\n    }],\n    tooltip: [{\n      type: Input\n    }],\n    tooltipPosition: [{\n      type: Input\n    }],\n    tooltipPositionStyle: [{\n      type: Input\n    }],\n    tooltipStyleClass: [{\n      type: Input\n    }],\n    templates: [{\n      type: ContentChildren,\n      args: [PrimeTemplate]\n    }],\n    selected: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input\n    }],\n    header: [{\n      type: Input\n    }],\n    leftIcon: [{\n      type: Input\n    }],\n    rightIcon: [{\n      type: Input\n    }]\n  });\n})();\n\nclass TabView {\n  constructor(el, cd) {\n    this.el = el;\n    this.cd = cd;\n    this.orientation = 'top';\n    this.onChange = new EventEmitter();\n    this.onClose = new EventEmitter();\n    this.activeIndexChange = new EventEmitter();\n  }\n\n  ngAfterContentInit() {\n    this.initTabs();\n    this.tabPanels.changes.subscribe(_ => {\n      this.initTabs();\n    });\n  }\n\n  ngAfterViewChecked() {\n    if (this.tabChanged) {\n      this.updateInkBar();\n      this.tabChanged = false;\n    }\n  }\n\n  initTabs() {\n    this.tabs = this.tabPanels.toArray();\n    let selectedTab = this.findSelectedTab();\n\n    if (!selectedTab && this.tabs.length) {\n      if (this.activeIndex != null && this.tabs.length > this.activeIndex) this.tabs[this.activeIndex].selected = true;else this.tabs[0].selected = true;\n      this.tabChanged = true;\n    }\n\n    this.cd.markForCheck();\n  }\n\n  open(event, tab) {\n    if (tab.disabled) {\n      if (event) {\n        event.preventDefault();\n      }\n\n      return;\n    }\n\n    if (!tab.selected) {\n      let selectedTab = this.findSelectedTab();\n\n      if (selectedTab) {\n        selectedTab.selected = false;\n      }\n\n      this.tabChanged = true;\n      tab.selected = true;\n      let selectedTabIndex = this.findTabIndex(tab);\n      this.preventActiveIndexPropagation = true;\n      this.activeIndexChange.emit(selectedTabIndex);\n      this.onChange.emit({\n        originalEvent: event,\n        index: selectedTabIndex\n      });\n    }\n\n    if (event) {\n      event.preventDefault();\n    }\n  }\n\n  close(event, tab) {\n    if (this.controlClose) {\n      this.onClose.emit({\n        originalEvent: event,\n        index: this.findTabIndex(tab),\n        close: () => {\n          this.closeTab(tab);\n        }\n      });\n    } else {\n      this.closeTab(tab);\n      this.onClose.emit({\n        originalEvent: event,\n        index: this.findTabIndex(tab)\n      });\n    }\n\n    event.stopPropagation();\n  }\n\n  closeTab(tab) {\n    if (tab.disabled) {\n      return;\n    }\n\n    if (tab.selected) {\n      this.tabChanged = true;\n      tab.selected = false;\n\n      for (let i = 0; i < this.tabs.length; i++) {\n        let tabPanel = this.tabs[i];\n\n        if (!tabPanel.closed && !tab.disabled) {\n          tabPanel.selected = true;\n          break;\n        }\n      }\n    }\n\n    tab.closed = true;\n  }\n\n  findSelectedTab() {\n    for (let i = 0; i < this.tabs.length; i++) {\n      if (this.tabs[i].selected) {\n        return this.tabs[i];\n      }\n    }\n\n    return null;\n  }\n\n  findTabIndex(tab) {\n    let index = -1;\n\n    for (let i = 0; i < this.tabs.length; i++) {\n      if (this.tabs[i] == tab) {\n        index = i;\n        break;\n      }\n    }\n\n    return index;\n  }\n\n  getBlockableElement() {\n    return this.el.nativeElement.children[0];\n  }\n\n  get activeIndex() {\n    return this._activeIndex;\n  }\n\n  set activeIndex(val) {\n    this._activeIndex = val;\n\n    if (this.preventActiveIndexPropagation) {\n      this.preventActiveIndexPropagation = false;\n      return;\n    }\n\n    if (this.tabs && this.tabs.length && this._activeIndex != null && this.tabs.length > this._activeIndex) {\n      this.findSelectedTab().selected = false;\n      this.tabs[this._activeIndex].selected = true;\n      this.tabChanged = true;\n    }\n  }\n\n  updateInkBar() {\n    let tabHeader = DomHandler.findSingle(this.navbar.nativeElement, 'li.p-highlight');\n    this.inkbar.nativeElement.style.width = DomHandler.getWidth(tabHeader) + 'px';\n    this.inkbar.nativeElement.style.left = DomHandler.getOffset(tabHeader).left - DomHandler.getOffset(this.navbar.nativeElement).left + 'px';\n  }\n\n}\n\nTabView.ɵfac = function TabView_Factory(t) {\n  return new (t || TabView)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n};\n\nTabView.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: TabView,\n  selectors: [[\"p-tabView\"]],\n  contentQueries: function TabView_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, TabPanel, 4);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tabPanels = _t);\n    }\n  },\n  viewQuery: function TabView_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c1, 5);\n      i0.ɵɵviewQuery(_c2, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.navbar = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.inkbar = _t.first);\n    }\n  },\n  inputs: {\n    orientation: \"orientation\",\n    style: \"style\",\n    styleClass: \"styleClass\",\n    controlClose: \"controlClose\",\n    activeIndex: \"activeIndex\"\n  },\n  outputs: {\n    onChange: \"onChange\",\n    onClose: \"onClose\",\n    activeIndexChange: \"activeIndexChange\"\n  },\n  ngContentSelectors: _c0,\n  decls: 8,\n  vars: 5,\n  consts: [[3, \"ngClass\", \"ngStyle\"], [\"role\", \"tablist\", 1, \"p-tabview-nav\"], [\"navbar\", \"\"], [\"ngFor\", \"\", 3, \"ngForOf\"], [1, \"p-tabview-ink-bar\"], [\"inkbar\", \"\"], [1, \"p-tabview-panels\"], [\"role\", \"presentation\", 3, \"ngClass\", \"ngStyle\", \"class\", 4, \"ngIf\"], [\"role\", \"presentation\", 3, \"ngClass\", \"ngStyle\"], [\"role\", \"tab\", \"pRipple\", \"\", 1, \"p-tabview-nav-link\", 3, \"pTooltip\", \"tooltipPosition\", \"positionStyle\", \"tooltipStyleClass\", \"click\", \"keydown.enter\"], [4, \"ngIf\"], [4, \"ngTemplateOutlet\"], [\"class\", \"p-tabview-close pi pi-times\", 3, \"click\", 4, \"ngIf\"], [\"class\", \"p-tabview-left-icon\", 3, \"ngClass\", 4, \"ngIf\"], [1, \"p-tabview-title\"], [\"class\", \"p-tabview-right-icon\", 3, \"ngClass\", 4, \"ngIf\"], [1, \"p-tabview-left-icon\", 3, \"ngClass\"], [1, \"p-tabview-right-icon\", 3, \"ngClass\"], [1, \"p-tabview-close\", \"pi\", \"pi-times\", 3, \"click\"]],\n  template: function TabView_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵelementStart(1, \"ul\", 1, 2);\n      i0.ɵɵtemplate(3, TabView_ng_template_3_Template, 1, 1, \"ng-template\", 3);\n      i0.ɵɵelement(4, \"li\", 4, 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"div\", 6);\n      i0.ɵɵprojection(7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵclassMap(ctx.styleClass);\n      i0.ɵɵproperty(\"ngClass\", \"p-tabview p-component\")(\"ngStyle\", ctx.style);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngForOf\", ctx.tabs);\n    }\n  },\n  directives: [i1.NgClass, i1.NgStyle, i1.NgForOf, i1.NgIf, i2.Ripple, i3.Tooltip, i1.NgTemplateOutlet],\n  styles: [\".p-tabview-nav{display:flex;margin:0;padding:0;list-style-type:none;flex-wrap:wrap}.p-tabview-nav-link{cursor:pointer;-webkit-user-select:none;-ms-user-select:none;user-select:none;display:flex;align-items:center;position:relative;text-decoration:none;overflow:hidden}.p-tabview-ink-bar{display:none;z-index:1}.p-tabview-nav-link:focus{z-index:1}.p-tabview-title{line-height:1}.p-tabview-close{z-index:1}\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TabView, [{\n    type: Component,\n    args: [{\n      selector: 'p-tabView',\n      template: `\n        <div [ngClass]=\"'p-tabview p-component'\" [ngStyle]=\"style\" [class]=\"styleClass\">\n            <ul #navbar class=\"p-tabview-nav\" role=\"tablist\">\n                <ng-template ngFor let-tab [ngForOf]=\"tabs\">\n                    <li role=\"presentation\" [ngClass]=\"{'p-highlight': tab.selected, 'p-disabled': tab.disabled}\" [ngStyle]=\"tab.headerStyle\" [class]=\"tab.headerStyleClass\" *ngIf=\"!tab.closed\">\n                        <a role=\"tab\" class=\"p-tabview-nav-link\" [attr.id]=\"tab.id + '-label'\" [attr.aria-selected]=\"tab.selected\" [attr.aria-controls]=\"tab.id\" [pTooltip]=\"tab.tooltip\" [tooltipPosition]=\"tab.tooltipPosition\"\n                            [attr.aria-selected]=\"tab.selected\" [positionStyle]=\"tab.tooltipPositionStyle\" [tooltipStyleClass]=\"tab.tooltipStyleClass\"\n                            (click)=\"open($event,tab)\" (keydown.enter)=\"open($event,tab)\" pRipple [attr.tabindex]=\"tab.disabled ? null : '0'\">\n                            <ng-container *ngIf=\"!tab.headerTemplate\">\n                                <span class=\"p-tabview-left-icon\" [ngClass]=\"tab.leftIcon\" *ngIf=\"tab.leftIcon\"></span>\n                                <span class=\"p-tabview-title\">{{tab.header}}</span>\n                                <span class=\"p-tabview-right-icon\" [ngClass]=\"tab.rightIcon\" *ngIf=\"tab.rightIcon\"></span>\n                            </ng-container>\n                            <ng-container *ngTemplateOutlet=\"tab.headerTemplate\"></ng-container>\n                            <span *ngIf=\"tab.closable\" class=\"p-tabview-close pi pi-times\" (click)=\"close($event,tab)\"></span>\n                        </a>\n                    </li>\n                </ng-template>\n                <li #inkbar class=\"p-tabview-ink-bar\"></li>\n            </ul>\n            <div class=\"p-tabview-panels\">\n                <ng-content></ng-content>\n            </div>\n        </div>\n    `,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      styleUrls: ['./tabview.css']\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i0.ChangeDetectorRef\n    }];\n  }, {\n    orientation: [{\n      type: Input\n    }],\n    style: [{\n      type: Input\n    }],\n    styleClass: [{\n      type: Input\n    }],\n    controlClose: [{\n      type: Input\n    }],\n    navbar: [{\n      type: ViewChild,\n      args: ['navbar']\n    }],\n    inkbar: [{\n      type: ViewChild,\n      args: ['inkbar']\n    }],\n    tabPanels: [{\n      type: ContentChildren,\n      args: [TabPanel]\n    }],\n    onChange: [{\n      type: Output\n    }],\n    onClose: [{\n      type: Output\n    }],\n    activeIndexChange: [{\n      type: Output\n    }],\n    activeIndex: [{\n      type: Input\n    }]\n  });\n})();\n\nclass TabViewModule {}\n\nTabViewModule.ɵfac = function TabViewModule_Factory(t) {\n  return new (t || TabViewModule)();\n};\n\nTabViewModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: TabViewModule\n});\nTabViewModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[CommonModule, SharedModule, TooltipModule, RippleModule], SharedModule]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TabViewModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, SharedModule, TooltipModule, RippleModule],\n      exports: [TabView, TabPanel, SharedModule],\n      declarations: [TabView, TabPanel]\n    }]\n  }], null, null);\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { TabPanel, TabView, TabViewModule };","map":{"version":3,"sources":["/Users/hemantsingh/Documents/GITHUB/ngdemos/node_modules/primeng/fesm2015/primeng-tabview.js"],"names":["i0","forwardRef","Component","Inject","Input","ContentChildren","EventEmitter","ChangeDetectionStrategy","ViewEncapsulation","ViewChild","Output","NgModule","i1","CommonModule","i3","TooltipModule","i2","RippleModule","PrimeTemplate","SharedModule","DomHandler","idx","TabPanel","constructor","tabView","viewContainer","cd","cache","tooltipPosition","tooltipPositionStyle","id","ngAfterContentInit","templates","forEach","item","getType","headerTemplate","template","contentTemplate","selected","_selected","val","loaded","detectChanges","disabled","_disabled","markForCheck","header","_header","leftIcon","_leftIcon","rightIcon","_rightIcon","ngOnDestroy","view","ɵfac","TabView","ViewContainerRef","ChangeDetectorRef","ɵcmp","NgIf","NgTemplateOutlet","type","args","selector","undefined","decorators","closable","headerStyle","headerStyleClass","tooltip","tooltipStyleClass","el","orientation","onChange","onClose","activeIndexChange","initTabs","tabPanels","changes","subscribe","_","ngAfterViewChecked","tabChanged","updateInkBar","tabs","toArray","selectedTab","findSelectedTab","length","activeIndex","open","event","tab","preventDefault","selectedTabIndex","findTabIndex","preventActiveIndexPropagation","emit","originalEvent","index","close","controlClose","closeTab","stopPropagation","i","tabPanel","closed","getBlockableElement","nativeElement","children","_activeIndex","tabHeader","findSingle","navbar","inkbar","style","width","getWidth","left","getOffset","ElementRef","NgClass","NgStyle","NgForOf","Ripple","Tooltip","changeDetection","OnPush","encapsulation","None","styleUrls","styleClass","TabViewModule","ɵmod","ɵinj","imports","exports","declarations"],"mappings":"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","sourcesContent":["import * as i0 from '@angular/core';\nimport { forwardRef, Component, Inject, Input, ContentChildren, EventEmitter, ChangeDetectionStrategy, ViewEncapsulation, ViewChild, Output, NgModule } from '@angular/core';\nimport * as i1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i3 from 'primeng/tooltip';\nimport { TooltipModule } from 'primeng/tooltip';\nimport * as i2 from 'primeng/ripple';\nimport { RippleModule } from 'primeng/ripple';\nimport { PrimeTemplate, SharedModule } from 'primeng/api';\nimport { DomHandler } from 'primeng/dom';\n\nlet idx = 0;\nclass TabPanel {\n    constructor(tabView, viewContainer, cd) {\n        this.viewContainer = viewContainer;\n        this.cd = cd;\n        this.cache = true;\n        this.tooltipPosition = 'top';\n        this.tooltipPositionStyle = 'absolute';\n        this.id = `p-tabpanel-${idx++}`;\n        this.tabView = tabView;\n    }\n    ngAfterContentInit() {\n        this.templates.forEach((item) => {\n            switch (item.getType()) {\n                case 'header':\n                    this.headerTemplate = item.template;\n                    break;\n                case 'content':\n                    this.contentTemplate = item.template;\n                    break;\n                default:\n                    this.contentTemplate = item.template;\n                    break;\n            }\n        });\n    }\n    get selected() {\n        return this._selected;\n    }\n    set selected(val) {\n        this._selected = val;\n        if (!this.loaded) {\n            this.cd.detectChanges();\n        }\n        if (val)\n            this.loaded = true;\n    }\n    get disabled() {\n        return this._disabled;\n    }\n    ;\n    set disabled(disabled) {\n        this._disabled = disabled;\n        this.tabView.cd.markForCheck();\n    }\n    get header() {\n        return this._header;\n    }\n    set header(header) {\n        this._header = header;\n        this.tabView.cd.markForCheck();\n    }\n    get leftIcon() {\n        return this._leftIcon;\n    }\n    set leftIcon(leftIcon) {\n        this._leftIcon = leftIcon;\n        this.tabView.cd.markForCheck();\n    }\n    get rightIcon() {\n        return this._rightIcon;\n    }\n    set rightIcon(rightIcon) {\n        this._rightIcon = rightIcon;\n        this.tabView.cd.markForCheck();\n    }\n    ngOnDestroy() {\n        this.view = null;\n    }\n}\nTabPanel.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: TabPanel, deps: [{ token: forwardRef(() => TabView) }, { token: i0.ViewContainerRef }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component });\nTabPanel.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.0.5\", type: TabPanel, selector: \"p-tabPanel\", inputs: { closable: \"closable\", headerStyle: \"headerStyle\", headerStyleClass: \"headerStyleClass\", cache: \"cache\", tooltip: \"tooltip\", tooltipPosition: \"tooltipPosition\", tooltipPositionStyle: \"tooltipPositionStyle\", tooltipStyleClass: \"tooltipStyleClass\", selected: \"selected\", disabled: \"disabled\", header: \"header\", leftIcon: \"leftIcon\", rightIcon: \"rightIcon\" }, queries: [{ propertyName: \"templates\", predicate: PrimeTemplate }], ngImport: i0, template: `\n        <div [attr.id]=\"id\" class=\"p-tabview-panel\" [hidden]=\"!selected\"\n            role=\"tabpanel\" [attr.aria-hidden]=\"!selected\" [attr.aria-labelledby]=\"id + '-label'\" *ngIf=\"!closed\">\n            <ng-content></ng-content>\n            <ng-container *ngIf=\"contentTemplate && (cache ? loaded : selected)\">\n                <ng-container *ngTemplateOutlet=\"contentTemplate\"></ng-container>\n            </ng-container>\n        </div>\n    `, isInline: true, directives: [{ type: i1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i1.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: TabPanel, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'p-tabPanel',\n                    template: `\n        <div [attr.id]=\"id\" class=\"p-tabview-panel\" [hidden]=\"!selected\"\n            role=\"tabpanel\" [attr.aria-hidden]=\"!selected\" [attr.aria-labelledby]=\"id + '-label'\" *ngIf=\"!closed\">\n            <ng-content></ng-content>\n            <ng-container *ngIf=\"contentTemplate && (cache ? loaded : selected)\">\n                <ng-container *ngTemplateOutlet=\"contentTemplate\"></ng-container>\n            </ng-container>\n        </div>\n    `\n                }]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [forwardRef(() => TabView)]\n                }] }, { type: i0.ViewContainerRef }, { type: i0.ChangeDetectorRef }]; }, propDecorators: { closable: [{\n                type: Input\n            }], headerStyle: [{\n                type: Input\n            }], headerStyleClass: [{\n                type: Input\n            }], cache: [{\n                type: Input\n            }], tooltip: [{\n                type: Input\n            }], tooltipPosition: [{\n                type: Input\n            }], tooltipPositionStyle: [{\n                type: Input\n            }], tooltipStyleClass: [{\n                type: Input\n            }], templates: [{\n                type: ContentChildren,\n                args: [PrimeTemplate]\n            }], selected: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }], header: [{\n                type: Input\n            }], leftIcon: [{\n                type: Input\n            }], rightIcon: [{\n                type: Input\n            }] } });\nclass TabView {\n    constructor(el, cd) {\n        this.el = el;\n        this.cd = cd;\n        this.orientation = 'top';\n        this.onChange = new EventEmitter();\n        this.onClose = new EventEmitter();\n        this.activeIndexChange = new EventEmitter();\n    }\n    ngAfterContentInit() {\n        this.initTabs();\n        this.tabPanels.changes.subscribe(_ => {\n            this.initTabs();\n        });\n    }\n    ngAfterViewChecked() {\n        if (this.tabChanged) {\n            this.updateInkBar();\n            this.tabChanged = false;\n        }\n    }\n    initTabs() {\n        this.tabs = this.tabPanels.toArray();\n        let selectedTab = this.findSelectedTab();\n        if (!selectedTab && this.tabs.length) {\n            if (this.activeIndex != null && this.tabs.length > this.activeIndex)\n                this.tabs[this.activeIndex].selected = true;\n            else\n                this.tabs[0].selected = true;\n            this.tabChanged = true;\n        }\n        this.cd.markForCheck();\n    }\n    open(event, tab) {\n        if (tab.disabled) {\n            if (event) {\n                event.preventDefault();\n            }\n            return;\n        }\n        if (!tab.selected) {\n            let selectedTab = this.findSelectedTab();\n            if (selectedTab) {\n                selectedTab.selected = false;\n            }\n            this.tabChanged = true;\n            tab.selected = true;\n            let selectedTabIndex = this.findTabIndex(tab);\n            this.preventActiveIndexPropagation = true;\n            this.activeIndexChange.emit(selectedTabIndex);\n            this.onChange.emit({ originalEvent: event, index: selectedTabIndex });\n        }\n        if (event) {\n            event.preventDefault();\n        }\n    }\n    close(event, tab) {\n        if (this.controlClose) {\n            this.onClose.emit({\n                originalEvent: event,\n                index: this.findTabIndex(tab),\n                close: () => {\n                    this.closeTab(tab);\n                }\n            });\n        }\n        else {\n            this.closeTab(tab);\n            this.onClose.emit({\n                originalEvent: event,\n                index: this.findTabIndex(tab)\n            });\n        }\n        event.stopPropagation();\n    }\n    closeTab(tab) {\n        if (tab.disabled) {\n            return;\n        }\n        if (tab.selected) {\n            this.tabChanged = true;\n            tab.selected = false;\n            for (let i = 0; i < this.tabs.length; i++) {\n                let tabPanel = this.tabs[i];\n                if (!tabPanel.closed && !tab.disabled) {\n                    tabPanel.selected = true;\n                    break;\n                }\n            }\n        }\n        tab.closed = true;\n    }\n    findSelectedTab() {\n        for (let i = 0; i < this.tabs.length; i++) {\n            if (this.tabs[i].selected) {\n                return this.tabs[i];\n            }\n        }\n        return null;\n    }\n    findTabIndex(tab) {\n        let index = -1;\n        for (let i = 0; i < this.tabs.length; i++) {\n            if (this.tabs[i] == tab) {\n                index = i;\n                break;\n            }\n        }\n        return index;\n    }\n    getBlockableElement() {\n        return this.el.nativeElement.children[0];\n    }\n    get activeIndex() {\n        return this._activeIndex;\n    }\n    set activeIndex(val) {\n        this._activeIndex = val;\n        if (this.preventActiveIndexPropagation) {\n            this.preventActiveIndexPropagation = false;\n            return;\n        }\n        if (this.tabs && this.tabs.length && this._activeIndex != null && this.tabs.length > this._activeIndex) {\n            this.findSelectedTab().selected = false;\n            this.tabs[this._activeIndex].selected = true;\n            this.tabChanged = true;\n        }\n    }\n    updateInkBar() {\n        let tabHeader = DomHandler.findSingle(this.navbar.nativeElement, 'li.p-highlight');\n        this.inkbar.nativeElement.style.width = DomHandler.getWidth(tabHeader) + 'px';\n        this.inkbar.nativeElement.style.left = DomHandler.getOffset(tabHeader).left - DomHandler.getOffset(this.navbar.nativeElement).left + 'px';\n    }\n}\nTabView.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: TabView, deps: [{ token: i0.ElementRef }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component });\nTabView.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.0.5\", type: TabView, selector: \"p-tabView\", inputs: { orientation: \"orientation\", style: \"style\", styleClass: \"styleClass\", controlClose: \"controlClose\", activeIndex: \"activeIndex\" }, outputs: { onChange: \"onChange\", onClose: \"onClose\", activeIndexChange: \"activeIndexChange\" }, queries: [{ propertyName: \"tabPanels\", predicate: TabPanel }], viewQueries: [{ propertyName: \"navbar\", first: true, predicate: [\"navbar\"], descendants: true }, { propertyName: \"inkbar\", first: true, predicate: [\"inkbar\"], descendants: true }], ngImport: i0, template: `\n        <div [ngClass]=\"'p-tabview p-component'\" [ngStyle]=\"style\" [class]=\"styleClass\">\n            <ul #navbar class=\"p-tabview-nav\" role=\"tablist\">\n                <ng-template ngFor let-tab [ngForOf]=\"tabs\">\n                    <li role=\"presentation\" [ngClass]=\"{'p-highlight': tab.selected, 'p-disabled': tab.disabled}\" [ngStyle]=\"tab.headerStyle\" [class]=\"tab.headerStyleClass\" *ngIf=\"!tab.closed\">\n                        <a role=\"tab\" class=\"p-tabview-nav-link\" [attr.id]=\"tab.id + '-label'\" [attr.aria-selected]=\"tab.selected\" [attr.aria-controls]=\"tab.id\" [pTooltip]=\"tab.tooltip\" [tooltipPosition]=\"tab.tooltipPosition\"\n                            [attr.aria-selected]=\"tab.selected\" [positionStyle]=\"tab.tooltipPositionStyle\" [tooltipStyleClass]=\"tab.tooltipStyleClass\"\n                            (click)=\"open($event,tab)\" (keydown.enter)=\"open($event,tab)\" pRipple [attr.tabindex]=\"tab.disabled ? null : '0'\">\n                            <ng-container *ngIf=\"!tab.headerTemplate\">\n                                <span class=\"p-tabview-left-icon\" [ngClass]=\"tab.leftIcon\" *ngIf=\"tab.leftIcon\"></span>\n                                <span class=\"p-tabview-title\">{{tab.header}}</span>\n                                <span class=\"p-tabview-right-icon\" [ngClass]=\"tab.rightIcon\" *ngIf=\"tab.rightIcon\"></span>\n                            </ng-container>\n                            <ng-container *ngTemplateOutlet=\"tab.headerTemplate\"></ng-container>\n                            <span *ngIf=\"tab.closable\" class=\"p-tabview-close pi pi-times\" (click)=\"close($event,tab)\"></span>\n                        </a>\n                    </li>\n                </ng-template>\n                <li #inkbar class=\"p-tabview-ink-bar\"></li>\n            </ul>\n            <div class=\"p-tabview-panels\">\n                <ng-content></ng-content>\n            </div>\n        </div>\n    `, isInline: true, styles: [\".p-tabview-nav{display:flex;margin:0;padding:0;list-style-type:none;flex-wrap:wrap}.p-tabview-nav-link{cursor:pointer;-webkit-user-select:none;-ms-user-select:none;user-select:none;display:flex;align-items:center;position:relative;text-decoration:none;overflow:hidden}.p-tabview-ink-bar{display:none;z-index:1}.p-tabview-nav-link:focus{z-index:1}.p-tabview-title{line-height:1}.p-tabview-close{z-index:1}\"], directives: [{ type: i1.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { type: i1.NgStyle, selector: \"[ngStyle]\", inputs: [\"ngStyle\"] }, { type: i1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: i1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2.Ripple, selector: \"[pRipple]\" }, { type: i3.Tooltip, selector: \"[pTooltip]\", inputs: [\"tooltipPosition\", \"tooltipEvent\", \"appendTo\", \"positionStyle\", \"tooltipStyleClass\", \"tooltipZIndex\", \"escape\", \"showDelay\", \"hideDelay\", \"life\", \"positionTop\", \"positionLeft\", \"pTooltip\", \"tooltipDisabled\", \"tooltipOptions\"] }, { type: i1.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: TabView, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'p-tabView',\n                    template: `\n        <div [ngClass]=\"'p-tabview p-component'\" [ngStyle]=\"style\" [class]=\"styleClass\">\n            <ul #navbar class=\"p-tabview-nav\" role=\"tablist\">\n                <ng-template ngFor let-tab [ngForOf]=\"tabs\">\n                    <li role=\"presentation\" [ngClass]=\"{'p-highlight': tab.selected, 'p-disabled': tab.disabled}\" [ngStyle]=\"tab.headerStyle\" [class]=\"tab.headerStyleClass\" *ngIf=\"!tab.closed\">\n                        <a role=\"tab\" class=\"p-tabview-nav-link\" [attr.id]=\"tab.id + '-label'\" [attr.aria-selected]=\"tab.selected\" [attr.aria-controls]=\"tab.id\" [pTooltip]=\"tab.tooltip\" [tooltipPosition]=\"tab.tooltipPosition\"\n                            [attr.aria-selected]=\"tab.selected\" [positionStyle]=\"tab.tooltipPositionStyle\" [tooltipStyleClass]=\"tab.tooltipStyleClass\"\n                            (click)=\"open($event,tab)\" (keydown.enter)=\"open($event,tab)\" pRipple [attr.tabindex]=\"tab.disabled ? null : '0'\">\n                            <ng-container *ngIf=\"!tab.headerTemplate\">\n                                <span class=\"p-tabview-left-icon\" [ngClass]=\"tab.leftIcon\" *ngIf=\"tab.leftIcon\"></span>\n                                <span class=\"p-tabview-title\">{{tab.header}}</span>\n                                <span class=\"p-tabview-right-icon\" [ngClass]=\"tab.rightIcon\" *ngIf=\"tab.rightIcon\"></span>\n                            </ng-container>\n                            <ng-container *ngTemplateOutlet=\"tab.headerTemplate\"></ng-container>\n                            <span *ngIf=\"tab.closable\" class=\"p-tabview-close pi pi-times\" (click)=\"close($event,tab)\"></span>\n                        </a>\n                    </li>\n                </ng-template>\n                <li #inkbar class=\"p-tabview-ink-bar\"></li>\n            </ul>\n            <div class=\"p-tabview-panels\">\n                <ng-content></ng-content>\n            </div>\n        </div>\n    `,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    encapsulation: ViewEncapsulation.None,\n                    styleUrls: ['./tabview.css']\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.ChangeDetectorRef }]; }, propDecorators: { orientation: [{\n                type: Input\n            }], style: [{\n                type: Input\n            }], styleClass: [{\n                type: Input\n            }], controlClose: [{\n                type: Input\n            }], navbar: [{\n                type: ViewChild,\n                args: ['navbar']\n            }], inkbar: [{\n                type: ViewChild,\n                args: ['inkbar']\n            }], tabPanels: [{\n                type: ContentChildren,\n                args: [TabPanel]\n            }], onChange: [{\n                type: Output\n            }], onClose: [{\n                type: Output\n            }], activeIndexChange: [{\n                type: Output\n            }], activeIndex: [{\n                type: Input\n            }] } });\nclass TabViewModule {\n}\nTabViewModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: TabViewModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nTabViewModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: TabViewModule, declarations: [TabView, TabPanel], imports: [CommonModule, SharedModule, TooltipModule, RippleModule], exports: [TabView, TabPanel, SharedModule] });\nTabViewModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: TabViewModule, imports: [[CommonModule, SharedModule, TooltipModule, RippleModule], SharedModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: TabViewModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule, SharedModule, TooltipModule, RippleModule],\n                    exports: [TabView, TabPanel, SharedModule],\n                    declarations: [TabView, TabPanel]\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TabPanel, TabView, TabViewModule };\n"]},"metadata":{},"sourceType":"module"}