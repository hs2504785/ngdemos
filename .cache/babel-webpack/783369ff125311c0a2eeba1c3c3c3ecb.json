{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { EventEmitter, Component, ChangeDetectionStrategy, ViewEncapsulation, Input, Output, NgModule } from '@angular/core';\nimport * as i2 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i4 from '@angular/forms';\nimport { FormsModule } from '@angular/forms';\nimport * as i1 from 'primeng/dropdown';\nimport { DropdownModule } from 'primeng/dropdown';\nimport * as i3 from 'primeng/ripple';\nimport { RippleModule } from 'primeng/ripple';\nimport * as i5 from 'primeng/api';\nimport { SharedModule } from 'primeng/api';\n\nfunction Paginator_div_0_div_1_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nconst _c0 = function (a0) {\n  return {\n    $implicit: a0\n  };\n};\n\nfunction Paginator_div_0_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 14);\n    i0.ɵɵtemplate(1, Paginator_div_0_div_1_ng_container_1_Template, 1, 0, \"ng-container\", 15);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r1.templateLeft)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(2, _c0, ctx_r1.paginatorState));\n  }\n}\n\nfunction Paginator_div_0_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 16);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r2.currentPageReport);\n  }\n}\n\nconst _c1 = function (a0) {\n  return {\n    \"p-disabled\": a0\n  };\n};\n\nfunction Paginator_div_0_button_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r11 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 17);\n    i0.ɵɵlistener(\"click\", function Paginator_div_0_button_3_Template_button_click_0_listener($event) {\n      i0.ɵɵrestoreView(_r11);\n      const ctx_r10 = i0.ɵɵnextContext(2);\n      return ctx_r10.changePageToFirst($event);\n    });\n    i0.ɵɵelement(1, \"span\", 18);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"disabled\", ctx_r3.isFirstPage())(\"ngClass\", i0.ɵɵpureFunction1(2, _c1, ctx_r3.isFirstPage()));\n  }\n}\n\nconst _c2 = function (a0) {\n  return {\n    \"p-highlight\": a0\n  };\n};\n\nfunction Paginator_div_0_span_6_button_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r15 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 21);\n    i0.ɵɵlistener(\"click\", function Paginator_div_0_span_6_button_1_Template_button_click_0_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r15);\n      const pageLink_r13 = restoredCtx.$implicit;\n      const ctx_r14 = i0.ɵɵnextContext(3);\n      return ctx_r14.onPageLinkClick($event, pageLink_r13 - 1);\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const pageLink_r13 = ctx.$implicit;\n    const ctx_r12 = i0.ɵɵnextContext(3);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(2, _c2, pageLink_r13 - 1 == ctx_r12.getPage()));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(pageLink_r13);\n  }\n}\n\nfunction Paginator_div_0_span_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 19);\n    i0.ɵɵtemplate(1, Paginator_div_0_span_6_button_1_Template, 2, 4, \"button\", 20);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r4.pageLinks);\n  }\n}\n\nfunction Paginator_div_0_p_dropdown_7_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0);\n  }\n\n  if (rf & 2) {\n    const ctx_r16 = i0.ɵɵnextContext(3);\n    i0.ɵɵtextInterpolate(ctx_r16.currentPageReport);\n  }\n}\n\nfunction Paginator_div_0_p_dropdown_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r18 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"p-dropdown\", 22);\n    i0.ɵɵlistener(\"onChange\", function Paginator_div_0_p_dropdown_7_Template_p_dropdown_onChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r18);\n      const ctx_r17 = i0.ɵɵnextContext(2);\n      return ctx_r17.onPageDropdownChange($event);\n    });\n    i0.ɵɵtemplate(1, Paginator_div_0_p_dropdown_7_ng_template_1_Template, 1, 1, \"ng-template\", 23);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"options\", ctx_r5.pageItems)(\"ngModel\", ctx_r5.getPage())(\"appendTo\", ctx_r5.dropdownAppendTo)(\"scrollHeight\", ctx_r5.dropdownScrollHeight);\n  }\n}\n\nfunction Paginator_div_0_button_10_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r20 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 24);\n    i0.ɵɵlistener(\"click\", function Paginator_div_0_button_10_Template_button_click_0_listener($event) {\n      i0.ɵɵrestoreView(_r20);\n      const ctx_r19 = i0.ɵɵnextContext(2);\n      return ctx_r19.changePageToLast($event);\n    });\n    i0.ɵɵelement(1, \"span\", 25);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"disabled\", ctx_r6.isLastPage())(\"ngClass\", i0.ɵɵpureFunction1(2, _c1, ctx_r6.isLastPage()));\n  }\n}\n\nfunction Paginator_div_0_p_dropdown_11_ng_container_1_ng_template_1_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nfunction Paginator_div_0_p_dropdown_11_ng_container_1_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, Paginator_div_0_p_dropdown_11_ng_container_1_ng_template_1_ng_container_0_Template, 1, 0, \"ng-container\", 15);\n  }\n\n  if (rf & 2) {\n    const item_r23 = ctx.$implicit;\n    const ctx_r22 = i0.ɵɵnextContext(4);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r22.dropdownItemTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(2, _c0, item_r23));\n  }\n}\n\nfunction Paginator_div_0_p_dropdown_11_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, Paginator_div_0_p_dropdown_11_ng_container_1_ng_template_1_Template, 1, 4, \"ng-template\", 28);\n    i0.ɵɵelementContainerEnd();\n  }\n}\n\nfunction Paginator_div_0_p_dropdown_11_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r26 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"p-dropdown\", 26);\n    i0.ɵɵlistener(\"ngModelChange\", function Paginator_div_0_p_dropdown_11_Template_p_dropdown_ngModelChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r26);\n      const ctx_r25 = i0.ɵɵnextContext(2);\n      return ctx_r25.rows = $event;\n    })(\"onChange\", function Paginator_div_0_p_dropdown_11_Template_p_dropdown_onChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r26);\n      const ctx_r27 = i0.ɵɵnextContext(2);\n      return ctx_r27.onRppChange($event);\n    });\n    i0.ɵɵtemplate(1, Paginator_div_0_p_dropdown_11_ng_container_1_Template, 2, 0, \"ng-container\", 27);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r7 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"options\", ctx_r7.rowsPerPageItems)(\"ngModel\", ctx_r7.rows)(\"appendTo\", ctx_r7.dropdownAppendTo)(\"scrollHeight\", ctx_r7.dropdownScrollHeight);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r7.dropdownItemTemplate);\n  }\n}\n\nfunction Paginator_div_0_div_12_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nfunction Paginator_div_0_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 29);\n    i0.ɵɵtemplate(1, Paginator_div_0_div_12_ng_container_1_Template, 1, 0, \"ng-container\", 15);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r8 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r8.templateRight)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(2, _c0, ctx_r8.paginatorState));\n  }\n}\n\nfunction Paginator_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r30 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 1);\n    i0.ɵɵtemplate(1, Paginator_div_0_div_1_Template, 2, 4, \"div\", 2);\n    i0.ɵɵtemplate(2, Paginator_div_0_span_2_Template, 2, 1, \"span\", 3);\n    i0.ɵɵtemplate(3, Paginator_div_0_button_3_Template, 2, 4, \"button\", 4);\n    i0.ɵɵelementStart(4, \"button\", 5);\n    i0.ɵɵlistener(\"click\", function Paginator_div_0_Template_button_click_4_listener($event) {\n      i0.ɵɵrestoreView(_r30);\n      const ctx_r29 = i0.ɵɵnextContext();\n      return ctx_r29.changePageToPrev($event);\n    });\n    i0.ɵɵelement(5, \"span\", 6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(6, Paginator_div_0_span_6_Template, 2, 1, \"span\", 7);\n    i0.ɵɵtemplate(7, Paginator_div_0_p_dropdown_7_Template, 2, 4, \"p-dropdown\", 8);\n    i0.ɵɵelementStart(8, \"button\", 9);\n    i0.ɵɵlistener(\"click\", function Paginator_div_0_Template_button_click_8_listener($event) {\n      i0.ɵɵrestoreView(_r30);\n      const ctx_r31 = i0.ɵɵnextContext();\n      return ctx_r31.changePageToNext($event);\n    });\n    i0.ɵɵelement(9, \"span\", 10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(10, Paginator_div_0_button_10_Template, 2, 4, \"button\", 11);\n    i0.ɵɵtemplate(11, Paginator_div_0_p_dropdown_11_Template, 2, 5, \"p-dropdown\", 12);\n    i0.ɵɵtemplate(12, Paginator_div_0_div_12_Template, 2, 4, \"div\", 13);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵclassMap(ctx_r0.styleClass);\n    i0.ɵɵproperty(\"ngStyle\", ctx_r0.style)(\"ngClass\", \"p-paginator p-component\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.templateLeft);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.showCurrentPageReport);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.showFirstLastIcon);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"disabled\", ctx_r0.isFirstPage())(\"ngClass\", i0.ɵɵpureFunction1(16, _c1, ctx_r0.isFirstPage()));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.showPageLinks);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.showJumpToPageDropdown);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"disabled\", ctx_r0.isLastPage())(\"ngClass\", i0.ɵɵpureFunction1(18, _c1, ctx_r0.isLastPage()));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.showFirstLastIcon);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.rowsPerPageOptions);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.templateRight);\n  }\n}\n\nclass Paginator {\n  constructor(cd) {\n    this.cd = cd;\n    this.pageLinkSize = 5;\n    this.onPageChange = new EventEmitter();\n    this.alwaysShow = true;\n    this.dropdownScrollHeight = '200px';\n    this.currentPageReportTemplate = '{currentPage} of {totalPages}';\n    this.showFirstLastIcon = true;\n    this.totalRecords = 0;\n    this.rows = 0;\n    this.showPageLinks = true;\n    this._first = 0;\n    this._page = 0;\n  }\n\n  ngOnInit() {\n    this.updatePaginatorState();\n  }\n\n  ngOnChanges(simpleChange) {\n    if (simpleChange.totalRecords) {\n      this.updatePageLinks();\n      this.updatePaginatorState();\n      this.updateFirst();\n      this.updateRowsPerPageOptions();\n    }\n\n    if (simpleChange.first) {\n      this._first = simpleChange.first.currentValue;\n      this.updatePageLinks();\n      this.updatePaginatorState();\n    }\n\n    if (simpleChange.rows) {\n      this.updatePageLinks();\n      this.updatePaginatorState();\n    }\n\n    if (simpleChange.rowsPerPageOptions) {\n      this.updateRowsPerPageOptions();\n    }\n  }\n\n  get first() {\n    return this._first;\n  }\n\n  set first(val) {\n    this._first = val;\n  }\n\n  updateRowsPerPageOptions() {\n    if (this.rowsPerPageOptions) {\n      this.rowsPerPageItems = [];\n\n      for (let opt of this.rowsPerPageOptions) {\n        if (typeof opt == 'object' && opt['showAll']) {\n          this.rowsPerPageItems.unshift({\n            label: opt['showAll'],\n            value: this.totalRecords\n          });\n        } else {\n          this.rowsPerPageItems.push({\n            label: String(opt),\n            value: opt\n          });\n        }\n      }\n    }\n  }\n\n  isFirstPage() {\n    return this.getPage() === 0;\n  }\n\n  isLastPage() {\n    return this.getPage() === this.getPageCount() - 1;\n  }\n\n  getPageCount() {\n    return Math.ceil(this.totalRecords / this.rows) || 1;\n  }\n\n  calculatePageLinkBoundaries() {\n    let numberOfPages = this.getPageCount(),\n        visiblePages = Math.min(this.pageLinkSize, numberOfPages); //calculate range, keep current in middle if necessary\n\n    let start = Math.max(0, Math.ceil(this.getPage() - visiblePages / 2)),\n        end = Math.min(numberOfPages - 1, start + visiblePages - 1); //check when approaching to last page\n\n    var delta = this.pageLinkSize - (end - start + 1);\n    start = Math.max(0, start - delta);\n    return [start, end];\n  }\n\n  updatePageLinks() {\n    this.pageLinks = [];\n    let boundaries = this.calculatePageLinkBoundaries(),\n        start = boundaries[0],\n        end = boundaries[1];\n\n    for (let i = start; i <= end; i++) {\n      this.pageLinks.push(i + 1);\n    }\n\n    if (this.showJumpToPageDropdown) {\n      this.pageItems = [];\n\n      for (let i = 0; i < this.getPageCount(); i++) {\n        this.pageItems.push({\n          label: String(i + 1),\n          value: i\n        });\n      }\n    }\n  }\n\n  changePage(p) {\n    var pc = this.getPageCount();\n\n    if (p >= 0 && p < pc) {\n      this._first = this.rows * p;\n      var state = {\n        page: p,\n        first: this.first,\n        rows: this.rows,\n        pageCount: pc\n      };\n      this.updatePageLinks();\n      this.onPageChange.emit(state);\n      this.updatePaginatorState();\n    }\n  }\n\n  updateFirst() {\n    const page = this.getPage();\n\n    if (page > 0 && this.totalRecords && this.first >= this.totalRecords) {\n      Promise.resolve(null).then(() => this.changePage(page - 1));\n    }\n  }\n\n  getPage() {\n    return Math.floor(this.first / this.rows);\n  }\n\n  changePageToFirst(event) {\n    if (!this.isFirstPage()) {\n      this.changePage(0);\n    }\n\n    event.preventDefault();\n  }\n\n  changePageToPrev(event) {\n    this.changePage(this.getPage() - 1);\n    event.preventDefault();\n  }\n\n  changePageToNext(event) {\n    this.changePage(this.getPage() + 1);\n    event.preventDefault();\n  }\n\n  changePageToLast(event) {\n    if (!this.isLastPage()) {\n      this.changePage(this.getPageCount() - 1);\n    }\n\n    event.preventDefault();\n  }\n\n  onPageLinkClick(event, page) {\n    this.changePage(page);\n    event.preventDefault();\n  }\n\n  onRppChange(event) {\n    this.changePage(this.getPage());\n  }\n\n  onPageDropdownChange(event) {\n    this.changePage(event.value);\n  }\n\n  updatePaginatorState() {\n    this.paginatorState = {\n      page: this.getPage(),\n      pageCount: this.getPageCount(),\n      rows: this.rows,\n      first: this.first,\n      totalRecords: this.totalRecords\n    };\n  }\n\n  get currentPageReport() {\n    return this.currentPageReportTemplate.replace(\"{currentPage}\", String(this.getPage() + 1)).replace(\"{totalPages}\", String(this.getPageCount())).replace(\"{first}\", String(this.totalRecords > 0 ? this._first + 1 : 0)).replace(\"{last}\", String(Math.min(this._first + this.rows, this.totalRecords))).replace(\"{rows}\", String(this.rows)).replace(\"{totalRecords}\", String(this.totalRecords));\n  }\n\n}\n\nPaginator.ɵfac = function Paginator_Factory(t) {\n  return new (t || Paginator)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n};\n\nPaginator.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: Paginator,\n  selectors: [[\"p-paginator\"]],\n  inputs: {\n    pageLinkSize: \"pageLinkSize\",\n    style: \"style\",\n    styleClass: \"styleClass\",\n    alwaysShow: \"alwaysShow\",\n    templateLeft: \"templateLeft\",\n    templateRight: \"templateRight\",\n    dropdownAppendTo: \"dropdownAppendTo\",\n    dropdownScrollHeight: \"dropdownScrollHeight\",\n    currentPageReportTemplate: \"currentPageReportTemplate\",\n    showCurrentPageReport: \"showCurrentPageReport\",\n    showFirstLastIcon: \"showFirstLastIcon\",\n    totalRecords: \"totalRecords\",\n    rows: \"rows\",\n    rowsPerPageOptions: \"rowsPerPageOptions\",\n    showJumpToPageDropdown: \"showJumpToPageDropdown\",\n    showPageLinks: \"showPageLinks\",\n    dropdownItemTemplate: \"dropdownItemTemplate\",\n    first: \"first\"\n  },\n  outputs: {\n    onPageChange: \"onPageChange\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  decls: 1,\n  vars: 1,\n  consts: [[3, \"class\", \"ngStyle\", \"ngClass\", 4, \"ngIf\"], [3, \"ngStyle\", \"ngClass\"], [\"class\", \"p-paginator-left-content\", 4, \"ngIf\"], [\"class\", \"p-paginator-current\", 4, \"ngIf\"], [\"type\", \"button\", \"pRipple\", \"\", \"class\", \"p-paginator-first p-paginator-element p-link\", 3, \"disabled\", \"ngClass\", \"click\", 4, \"ngIf\"], [\"type\", \"button\", \"pRipple\", \"\", 1, \"p-paginator-prev\", \"p-paginator-element\", \"p-link\", 3, \"disabled\", \"ngClass\", \"click\"], [1, \"p-paginator-icon\", \"pi\", \"pi-angle-left\"], [\"class\", \"p-paginator-pages\", 4, \"ngIf\"], [\"styleClass\", \"p-paginator-page-options\", 3, \"options\", \"ngModel\", \"appendTo\", \"scrollHeight\", \"onChange\", 4, \"ngIf\"], [\"type\", \"button\", \"pRipple\", \"\", 1, \"p-paginator-next\", \"p-paginator-element\", \"p-link\", 3, \"disabled\", \"ngClass\", \"click\"], [1, \"p-paginator-icon\", \"pi\", \"pi-angle-right\"], [\"type\", \"button\", \"pRipple\", \"\", \"class\", \"p-paginator-last p-paginator-element p-link\", 3, \"disabled\", \"ngClass\", \"click\", 4, \"ngIf\"], [\"styleClass\", \"p-paginator-rpp-options\", 3, \"options\", \"ngModel\", \"appendTo\", \"scrollHeight\", \"ngModelChange\", \"onChange\", 4, \"ngIf\"], [\"class\", \"p-paginator-right-content\", 4, \"ngIf\"], [1, \"p-paginator-left-content\"], [4, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [1, \"p-paginator-current\"], [\"type\", \"button\", \"pRipple\", \"\", 1, \"p-paginator-first\", \"p-paginator-element\", \"p-link\", 3, \"disabled\", \"ngClass\", \"click\"], [1, \"p-paginator-icon\", \"pi\", \"pi-angle-double-left\"], [1, \"p-paginator-pages\"], [\"type\", \"button\", \"class\", \"p-paginator-page p-paginator-element p-link\", \"pRipple\", \"\", 3, \"ngClass\", \"click\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"button\", \"pRipple\", \"\", 1, \"p-paginator-page\", \"p-paginator-element\", \"p-link\", 3, \"ngClass\", \"click\"], [\"styleClass\", \"p-paginator-page-options\", 3, \"options\", \"ngModel\", \"appendTo\", \"scrollHeight\", \"onChange\"], [\"pTemplate\", \"selectedItem\"], [\"type\", \"button\", \"pRipple\", \"\", 1, \"p-paginator-last\", \"p-paginator-element\", \"p-link\", 3, \"disabled\", \"ngClass\", \"click\"], [1, \"p-paginator-icon\", \"pi\", \"pi-angle-double-right\"], [\"styleClass\", \"p-paginator-rpp-options\", 3, \"options\", \"ngModel\", \"appendTo\", \"scrollHeight\", \"ngModelChange\", \"onChange\"], [4, \"ngIf\"], [\"pTemplate\", \"item\"], [1, \"p-paginator-right-content\"]],\n  template: function Paginator_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, Paginator_div_0_Template, 13, 20, \"div\", 0);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.alwaysShow ? true : ctx.pageLinks && ctx.pageLinks.length > 1);\n    }\n  },\n  directives: [i2.NgIf, i2.NgStyle, i2.NgClass, i3.Ripple, i2.NgTemplateOutlet, i2.NgForOf, i1.Dropdown, i4.NgControlStatus, i4.NgModel, i5.PrimeTemplate],\n  styles: [\".p-paginator{display:flex;align-items:center;justify-content:center;flex-wrap:wrap}.p-paginator-left-content{margin-right:auto}.p-paginator-right-content{margin-left:auto}.p-paginator-current,.p-paginator-first,.p-paginator-last,.p-paginator-next,.p-paginator-page,.p-paginator-prev{cursor:pointer;display:inline-flex;align-items:center;justify-content:center;line-height:1;-webkit-user-select:none;-ms-user-select:none;user-select:none;overflow:hidden;position:relative}.p-paginator-element:focus{z-index:1;position:relative}\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(Paginator, [{\n    type: Component,\n    args: [{\n      selector: 'p-paginator',\n      template: `\n        <div [class]=\"styleClass\" [ngStyle]=\"style\" [ngClass]=\"'p-paginator p-component'\" *ngIf=\"alwaysShow ? true : (pageLinks && pageLinks.length > 1)\">\n            <div class=\"p-paginator-left-content\" *ngIf=\"templateLeft\">\n                <ng-container *ngTemplateOutlet=\"templateLeft; context: {$implicit: paginatorState}\"></ng-container>\n            </div>\n            <span class=\"p-paginator-current\" *ngIf=\"showCurrentPageReport\">{{currentPageReport}}</span>\n            <button *ngIf=\"showFirstLastIcon\" type=\"button\" [disabled]=\"isFirstPage()\" (click)=\"changePageToFirst($event)\" pRipple\n                    class=\"p-paginator-first p-paginator-element p-link\" [ngClass]=\"{'p-disabled':isFirstPage()}\">\n                <span class=\"p-paginator-icon pi pi-angle-double-left\"></span>\n            </button>\n            <button type=\"button\" [disabled]=\"isFirstPage()\" (click)=\"changePageToPrev($event)\" pRipple\n                    class=\"p-paginator-prev p-paginator-element p-link\" [ngClass]=\"{'p-disabled':isFirstPage()}\">\n                <span class=\"p-paginator-icon pi pi-angle-left\"></span>\n            </button>\n            <span class=\"p-paginator-pages\" *ngIf=\"showPageLinks\">\n                <button type=\"button\" *ngFor=\"let pageLink of pageLinks\" class=\"p-paginator-page p-paginator-element p-link\" [ngClass]=\"{'p-highlight': (pageLink-1 == getPage())}\"\n                    (click)=\"onPageLinkClick($event, pageLink - 1)\" pRipple>{{pageLink}}</button>\n            </span>\n            <p-dropdown [options]=\"pageItems\" [ngModel]=\"getPage()\" *ngIf=\"showJumpToPageDropdown\"  styleClass=\"p-paginator-page-options\"\n                (onChange)=\"onPageDropdownChange($event)\" [appendTo]=\"dropdownAppendTo\" [scrollHeight]=\"dropdownScrollHeight\">\n                <ng-template pTemplate=\"selectedItem\">{{currentPageReport}}</ng-template>\n            </p-dropdown>\n            <button type=\"button\" [disabled]=\"isLastPage()\" (click)=\"changePageToNext($event)\" pRipple\n                    class=\"p-paginator-next p-paginator-element p-link\" [ngClass]=\"{'p-disabled':isLastPage()}\">\n                <span class=\"p-paginator-icon pi pi-angle-right\"></span>\n            </button>\n            <button *ngIf=\"showFirstLastIcon\" type=\"button\" [disabled]=\"isLastPage()\" (click)=\"changePageToLast($event)\" pRipple\n                    class=\"p-paginator-last p-paginator-element p-link\" [ngClass]=\"{'p-disabled':isLastPage()}\">\n                <span class=\"p-paginator-icon pi pi-angle-double-right\"></span>\n            </button>\n            <p-dropdown [options]=\"rowsPerPageItems\" [(ngModel)]=\"rows\" *ngIf=\"rowsPerPageOptions\" styleClass=\"p-paginator-rpp-options\"\n                (onChange)=\"onRppChange($event)\" [appendTo]=\"dropdownAppendTo\" [scrollHeight]=\"dropdownScrollHeight\">\n                <ng-container *ngIf=\"dropdownItemTemplate\">\n                    <ng-template let-item pTemplate=\"item\">\n                        <ng-container *ngTemplateOutlet=\"dropdownItemTemplate; context: {$implicit: item}\">\n                        </ng-container>\n                    </ng-template>\n                </ng-container>\n            </p-dropdown>\n            <div class=\"p-paginator-right-content\" *ngIf=\"templateRight\">\n                <ng-container *ngTemplateOutlet=\"templateRight; context: {$implicit: paginatorState}\"></ng-container>\n            </div>\n        </div>\n    `,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      styleUrls: ['./paginator.css']\n    }]\n  }], function () {\n    return [{\n      type: i0.ChangeDetectorRef\n    }];\n  }, {\n    pageLinkSize: [{\n      type: Input\n    }],\n    onPageChange: [{\n      type: Output\n    }],\n    style: [{\n      type: Input\n    }],\n    styleClass: [{\n      type: Input\n    }],\n    alwaysShow: [{\n      type: Input\n    }],\n    templateLeft: [{\n      type: Input\n    }],\n    templateRight: [{\n      type: Input\n    }],\n    dropdownAppendTo: [{\n      type: Input\n    }],\n    dropdownScrollHeight: [{\n      type: Input\n    }],\n    currentPageReportTemplate: [{\n      type: Input\n    }],\n    showCurrentPageReport: [{\n      type: Input\n    }],\n    showFirstLastIcon: [{\n      type: Input\n    }],\n    totalRecords: [{\n      type: Input\n    }],\n    rows: [{\n      type: Input\n    }],\n    rowsPerPageOptions: [{\n      type: Input\n    }],\n    showJumpToPageDropdown: [{\n      type: Input\n    }],\n    showPageLinks: [{\n      type: Input\n    }],\n    dropdownItemTemplate: [{\n      type: Input\n    }],\n    first: [{\n      type: Input\n    }]\n  });\n})();\n\nclass PaginatorModule {}\n\nPaginatorModule.ɵfac = function PaginatorModule_Factory(t) {\n  return new (t || PaginatorModule)();\n};\n\nPaginatorModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: PaginatorModule\n});\nPaginatorModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[CommonModule, DropdownModule, FormsModule, SharedModule, RippleModule], DropdownModule, FormsModule, SharedModule]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PaginatorModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, DropdownModule, FormsModule, SharedModule, RippleModule],\n      exports: [Paginator, DropdownModule, FormsModule, SharedModule],\n      declarations: [Paginator]\n    }]\n  }], null, null);\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { Paginator, PaginatorModule };","map":{"version":3,"sources":["/Users/hemantsingh/Documents/GITHUB/ngdemos/node_modules/primeng/fesm2015/primeng-paginator.js"],"names":["i0","EventEmitter","Component","ChangeDetectionStrategy","ViewEncapsulation","Input","Output","NgModule","i2","CommonModule","i4","FormsModule","i1","DropdownModule","i3","RippleModule","i5","SharedModule","Paginator","constructor","cd","pageLinkSize","onPageChange","alwaysShow","dropdownScrollHeight","currentPageReportTemplate","showFirstLastIcon","totalRecords","rows","showPageLinks","_first","_page","ngOnInit","updatePaginatorState","ngOnChanges","simpleChange","updatePageLinks","updateFirst","updateRowsPerPageOptions","first","currentValue","rowsPerPageOptions","val","rowsPerPageItems","opt","unshift","label","value","push","String","isFirstPage","getPage","isLastPage","getPageCount","Math","ceil","calculatePageLinkBoundaries","numberOfPages","visiblePages","min","start","max","end","delta","pageLinks","boundaries","i","showJumpToPageDropdown","pageItems","changePage","p","pc","state","page","pageCount","emit","Promise","resolve","then","floor","changePageToFirst","event","preventDefault","changePageToPrev","changePageToNext","changePageToLast","onPageLinkClick","onRppChange","onPageDropdownChange","paginatorState","currentPageReport","replace","ɵfac","ChangeDetectorRef","ɵcmp","NgIf","NgStyle","NgClass","Ripple","NgTemplateOutlet","NgForOf","Dropdown","NgControlStatus","NgModel","PrimeTemplate","type","args","selector","template","changeDetection","OnPush","encapsulation","None","styleUrls","style","styleClass","templateLeft","templateRight","dropdownAppendTo","showCurrentPageReport","dropdownItemTemplate","PaginatorModule","ɵmod","ɵinj","imports","exports","declarations"],"mappings":"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","sourcesContent":["import * as i0 from '@angular/core';\nimport { EventEmitter, Component, ChangeDetectionStrategy, ViewEncapsulation, Input, Output, NgModule } from '@angular/core';\nimport * as i2 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i4 from '@angular/forms';\nimport { FormsModule } from '@angular/forms';\nimport * as i1 from 'primeng/dropdown';\nimport { DropdownModule } from 'primeng/dropdown';\nimport * as i3 from 'primeng/ripple';\nimport { RippleModule } from 'primeng/ripple';\nimport * as i5 from 'primeng/api';\nimport { SharedModule } from 'primeng/api';\n\nclass Paginator {\n    constructor(cd) {\n        this.cd = cd;\n        this.pageLinkSize = 5;\n        this.onPageChange = new EventEmitter();\n        this.alwaysShow = true;\n        this.dropdownScrollHeight = '200px';\n        this.currentPageReportTemplate = '{currentPage} of {totalPages}';\n        this.showFirstLastIcon = true;\n        this.totalRecords = 0;\n        this.rows = 0;\n        this.showPageLinks = true;\n        this._first = 0;\n        this._page = 0;\n    }\n    ngOnInit() {\n        this.updatePaginatorState();\n    }\n    ngOnChanges(simpleChange) {\n        if (simpleChange.totalRecords) {\n            this.updatePageLinks();\n            this.updatePaginatorState();\n            this.updateFirst();\n            this.updateRowsPerPageOptions();\n        }\n        if (simpleChange.first) {\n            this._first = simpleChange.first.currentValue;\n            this.updatePageLinks();\n            this.updatePaginatorState();\n        }\n        if (simpleChange.rows) {\n            this.updatePageLinks();\n            this.updatePaginatorState();\n        }\n        if (simpleChange.rowsPerPageOptions) {\n            this.updateRowsPerPageOptions();\n        }\n    }\n    get first() {\n        return this._first;\n    }\n    set first(val) {\n        this._first = val;\n    }\n    updateRowsPerPageOptions() {\n        if (this.rowsPerPageOptions) {\n            this.rowsPerPageItems = [];\n            for (let opt of this.rowsPerPageOptions) {\n                if (typeof opt == 'object' && opt['showAll']) {\n                    this.rowsPerPageItems.unshift({ label: opt['showAll'], value: this.totalRecords });\n                }\n                else {\n                    this.rowsPerPageItems.push({ label: String(opt), value: opt });\n                }\n            }\n        }\n    }\n    isFirstPage() {\n        return this.getPage() === 0;\n    }\n    isLastPage() {\n        return this.getPage() === this.getPageCount() - 1;\n    }\n    getPageCount() {\n        return Math.ceil(this.totalRecords / this.rows) || 1;\n    }\n    calculatePageLinkBoundaries() {\n        let numberOfPages = this.getPageCount(), visiblePages = Math.min(this.pageLinkSize, numberOfPages);\n        //calculate range, keep current in middle if necessary\n        let start = Math.max(0, Math.ceil(this.getPage() - ((visiblePages) / 2))), end = Math.min(numberOfPages - 1, start + visiblePages - 1);\n        //check when approaching to last page\n        var delta = this.pageLinkSize - (end - start + 1);\n        start = Math.max(0, start - delta);\n        return [start, end];\n    }\n    updatePageLinks() {\n        this.pageLinks = [];\n        let boundaries = this.calculatePageLinkBoundaries(), start = boundaries[0], end = boundaries[1];\n        for (let i = start; i <= end; i++) {\n            this.pageLinks.push(i + 1);\n        }\n        if (this.showJumpToPageDropdown) {\n            this.pageItems = [];\n            for (let i = 0; i < this.getPageCount(); i++) {\n                this.pageItems.push({ label: String(i + 1), value: i });\n            }\n        }\n    }\n    changePage(p) {\n        var pc = this.getPageCount();\n        if (p >= 0 && p < pc) {\n            this._first = this.rows * p;\n            var state = {\n                page: p,\n                first: this.first,\n                rows: this.rows,\n                pageCount: pc\n            };\n            this.updatePageLinks();\n            this.onPageChange.emit(state);\n            this.updatePaginatorState();\n        }\n    }\n    updateFirst() {\n        const page = this.getPage();\n        if (page > 0 && this.totalRecords && (this.first >= this.totalRecords)) {\n            Promise.resolve(null).then(() => this.changePage(page - 1));\n        }\n    }\n    getPage() {\n        return Math.floor(this.first / this.rows);\n    }\n    changePageToFirst(event) {\n        if (!this.isFirstPage()) {\n            this.changePage(0);\n        }\n        event.preventDefault();\n    }\n    changePageToPrev(event) {\n        this.changePage(this.getPage() - 1);\n        event.preventDefault();\n    }\n    changePageToNext(event) {\n        this.changePage(this.getPage() + 1);\n        event.preventDefault();\n    }\n    changePageToLast(event) {\n        if (!this.isLastPage()) {\n            this.changePage(this.getPageCount() - 1);\n        }\n        event.preventDefault();\n    }\n    onPageLinkClick(event, page) {\n        this.changePage(page);\n        event.preventDefault();\n    }\n    onRppChange(event) {\n        this.changePage(this.getPage());\n    }\n    onPageDropdownChange(event) {\n        this.changePage(event.value);\n    }\n    updatePaginatorState() {\n        this.paginatorState = {\n            page: this.getPage(),\n            pageCount: this.getPageCount(),\n            rows: this.rows,\n            first: this.first,\n            totalRecords: this.totalRecords\n        };\n    }\n    get currentPageReport() {\n        return this.currentPageReportTemplate\n            .replace(\"{currentPage}\", String(this.getPage() + 1))\n            .replace(\"{totalPages}\", String(this.getPageCount()))\n            .replace(\"{first}\", String((this.totalRecords > 0) ? this._first + 1 : 0))\n            .replace(\"{last}\", String(Math.min(this._first + this.rows, this.totalRecords)))\n            .replace(\"{rows}\", String(this.rows))\n            .replace(\"{totalRecords}\", String(this.totalRecords));\n    }\n}\nPaginator.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: Paginator, deps: [{ token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component });\nPaginator.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.0.5\", type: Paginator, selector: \"p-paginator\", inputs: { pageLinkSize: \"pageLinkSize\", style: \"style\", styleClass: \"styleClass\", alwaysShow: \"alwaysShow\", templateLeft: \"templateLeft\", templateRight: \"templateRight\", dropdownAppendTo: \"dropdownAppendTo\", dropdownScrollHeight: \"dropdownScrollHeight\", currentPageReportTemplate: \"currentPageReportTemplate\", showCurrentPageReport: \"showCurrentPageReport\", showFirstLastIcon: \"showFirstLastIcon\", totalRecords: \"totalRecords\", rows: \"rows\", rowsPerPageOptions: \"rowsPerPageOptions\", showJumpToPageDropdown: \"showJumpToPageDropdown\", showPageLinks: \"showPageLinks\", dropdownItemTemplate: \"dropdownItemTemplate\", first: \"first\" }, outputs: { onPageChange: \"onPageChange\" }, usesOnChanges: true, ngImport: i0, template: `\n        <div [class]=\"styleClass\" [ngStyle]=\"style\" [ngClass]=\"'p-paginator p-component'\" *ngIf=\"alwaysShow ? true : (pageLinks && pageLinks.length > 1)\">\n            <div class=\"p-paginator-left-content\" *ngIf=\"templateLeft\">\n                <ng-container *ngTemplateOutlet=\"templateLeft; context: {$implicit: paginatorState}\"></ng-container>\n            </div>\n            <span class=\"p-paginator-current\" *ngIf=\"showCurrentPageReport\">{{currentPageReport}}</span>\n            <button *ngIf=\"showFirstLastIcon\" type=\"button\" [disabled]=\"isFirstPage()\" (click)=\"changePageToFirst($event)\" pRipple\n                    class=\"p-paginator-first p-paginator-element p-link\" [ngClass]=\"{'p-disabled':isFirstPage()}\">\n                <span class=\"p-paginator-icon pi pi-angle-double-left\"></span>\n            </button>\n            <button type=\"button\" [disabled]=\"isFirstPage()\" (click)=\"changePageToPrev($event)\" pRipple\n                    class=\"p-paginator-prev p-paginator-element p-link\" [ngClass]=\"{'p-disabled':isFirstPage()}\">\n                <span class=\"p-paginator-icon pi pi-angle-left\"></span>\n            </button>\n            <span class=\"p-paginator-pages\" *ngIf=\"showPageLinks\">\n                <button type=\"button\" *ngFor=\"let pageLink of pageLinks\" class=\"p-paginator-page p-paginator-element p-link\" [ngClass]=\"{'p-highlight': (pageLink-1 == getPage())}\"\n                    (click)=\"onPageLinkClick($event, pageLink - 1)\" pRipple>{{pageLink}}</button>\n            </span>\n            <p-dropdown [options]=\"pageItems\" [ngModel]=\"getPage()\" *ngIf=\"showJumpToPageDropdown\"  styleClass=\"p-paginator-page-options\"\n                (onChange)=\"onPageDropdownChange($event)\" [appendTo]=\"dropdownAppendTo\" [scrollHeight]=\"dropdownScrollHeight\">\n                <ng-template pTemplate=\"selectedItem\">{{currentPageReport}}</ng-template>\n            </p-dropdown>\n            <button type=\"button\" [disabled]=\"isLastPage()\" (click)=\"changePageToNext($event)\" pRipple\n                    class=\"p-paginator-next p-paginator-element p-link\" [ngClass]=\"{'p-disabled':isLastPage()}\">\n                <span class=\"p-paginator-icon pi pi-angle-right\"></span>\n            </button>\n            <button *ngIf=\"showFirstLastIcon\" type=\"button\" [disabled]=\"isLastPage()\" (click)=\"changePageToLast($event)\" pRipple\n                    class=\"p-paginator-last p-paginator-element p-link\" [ngClass]=\"{'p-disabled':isLastPage()}\">\n                <span class=\"p-paginator-icon pi pi-angle-double-right\"></span>\n            </button>\n            <p-dropdown [options]=\"rowsPerPageItems\" [(ngModel)]=\"rows\" *ngIf=\"rowsPerPageOptions\" styleClass=\"p-paginator-rpp-options\"\n                (onChange)=\"onRppChange($event)\" [appendTo]=\"dropdownAppendTo\" [scrollHeight]=\"dropdownScrollHeight\">\n                <ng-container *ngIf=\"dropdownItemTemplate\">\n                    <ng-template let-item pTemplate=\"item\">\n                        <ng-container *ngTemplateOutlet=\"dropdownItemTemplate; context: {$implicit: item}\">\n                        </ng-container>\n                    </ng-template>\n                </ng-container>\n            </p-dropdown>\n            <div class=\"p-paginator-right-content\" *ngIf=\"templateRight\">\n                <ng-container *ngTemplateOutlet=\"templateRight; context: {$implicit: paginatorState}\"></ng-container>\n            </div>\n        </div>\n    `, isInline: true, styles: [\".p-paginator{display:flex;align-items:center;justify-content:center;flex-wrap:wrap}.p-paginator-left-content{margin-right:auto}.p-paginator-right-content{margin-left:auto}.p-paginator-current,.p-paginator-first,.p-paginator-last,.p-paginator-next,.p-paginator-page,.p-paginator-prev{cursor:pointer;display:inline-flex;align-items:center;justify-content:center;line-height:1;-webkit-user-select:none;-ms-user-select:none;user-select:none;overflow:hidden;position:relative}.p-paginator-element:focus{z-index:1;position:relative}\"], components: [{ type: i1.Dropdown, selector: \"p-dropdown\", inputs: [\"scrollHeight\", \"filter\", \"name\", \"style\", \"panelStyle\", \"styleClass\", \"panelStyleClass\", \"readonly\", \"required\", \"editable\", \"appendTo\", \"tabindex\", \"placeholder\", \"filterPlaceholder\", \"filterLocale\", \"inputId\", \"selectId\", \"dataKey\", \"filterBy\", \"autofocus\", \"resetFilterOnHide\", \"dropdownIcon\", \"optionLabel\", \"optionValue\", \"optionDisabled\", \"optionGroupLabel\", \"optionGroupChildren\", \"autoDisplayFirst\", \"group\", \"showClear\", \"emptyFilterMessage\", \"emptyMessage\", \"virtualScroll\", \"itemSize\", \"autoZIndex\", \"baseZIndex\", \"showTransitionOptions\", \"hideTransitionOptions\", \"ariaFilterLabel\", \"ariaLabelledBy\", \"filterMatchMode\", \"maxlength\", \"tooltip\", \"tooltipPosition\", \"tooltipPositionStyle\", \"tooltipStyleClass\", \"autofocusFilter\", \"disabled\", \"options\", \"filterValue\"], outputs: [\"onChange\", \"onFilter\", \"onFocus\", \"onBlur\", \"onClick\", \"onShow\", \"onHide\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2.NgStyle, selector: \"[ngStyle]\", inputs: [\"ngStyle\"] }, { type: i2.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { type: i2.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\"] }, { type: i3.Ripple, selector: \"[pRipple]\" }, { type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: i4.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { type: i4.NgModel, selector: \"[ngModel]:not([formControlName]):not([formControl])\", inputs: [\"name\", \"disabled\", \"ngModel\", \"ngModelOptions\"], outputs: [\"ngModelChange\"], exportAs: [\"ngModel\"] }, { type: i5.PrimeTemplate, selector: \"[pTemplate]\", inputs: [\"type\", \"pTemplate\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: Paginator, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'p-paginator',\n                    template: `\n        <div [class]=\"styleClass\" [ngStyle]=\"style\" [ngClass]=\"'p-paginator p-component'\" *ngIf=\"alwaysShow ? true : (pageLinks && pageLinks.length > 1)\">\n            <div class=\"p-paginator-left-content\" *ngIf=\"templateLeft\">\n                <ng-container *ngTemplateOutlet=\"templateLeft; context: {$implicit: paginatorState}\"></ng-container>\n            </div>\n            <span class=\"p-paginator-current\" *ngIf=\"showCurrentPageReport\">{{currentPageReport}}</span>\n            <button *ngIf=\"showFirstLastIcon\" type=\"button\" [disabled]=\"isFirstPage()\" (click)=\"changePageToFirst($event)\" pRipple\n                    class=\"p-paginator-first p-paginator-element p-link\" [ngClass]=\"{'p-disabled':isFirstPage()}\">\n                <span class=\"p-paginator-icon pi pi-angle-double-left\"></span>\n            </button>\n            <button type=\"button\" [disabled]=\"isFirstPage()\" (click)=\"changePageToPrev($event)\" pRipple\n                    class=\"p-paginator-prev p-paginator-element p-link\" [ngClass]=\"{'p-disabled':isFirstPage()}\">\n                <span class=\"p-paginator-icon pi pi-angle-left\"></span>\n            </button>\n            <span class=\"p-paginator-pages\" *ngIf=\"showPageLinks\">\n                <button type=\"button\" *ngFor=\"let pageLink of pageLinks\" class=\"p-paginator-page p-paginator-element p-link\" [ngClass]=\"{'p-highlight': (pageLink-1 == getPage())}\"\n                    (click)=\"onPageLinkClick($event, pageLink - 1)\" pRipple>{{pageLink}}</button>\n            </span>\n            <p-dropdown [options]=\"pageItems\" [ngModel]=\"getPage()\" *ngIf=\"showJumpToPageDropdown\"  styleClass=\"p-paginator-page-options\"\n                (onChange)=\"onPageDropdownChange($event)\" [appendTo]=\"dropdownAppendTo\" [scrollHeight]=\"dropdownScrollHeight\">\n                <ng-template pTemplate=\"selectedItem\">{{currentPageReport}}</ng-template>\n            </p-dropdown>\n            <button type=\"button\" [disabled]=\"isLastPage()\" (click)=\"changePageToNext($event)\" pRipple\n                    class=\"p-paginator-next p-paginator-element p-link\" [ngClass]=\"{'p-disabled':isLastPage()}\">\n                <span class=\"p-paginator-icon pi pi-angle-right\"></span>\n            </button>\n            <button *ngIf=\"showFirstLastIcon\" type=\"button\" [disabled]=\"isLastPage()\" (click)=\"changePageToLast($event)\" pRipple\n                    class=\"p-paginator-last p-paginator-element p-link\" [ngClass]=\"{'p-disabled':isLastPage()}\">\n                <span class=\"p-paginator-icon pi pi-angle-double-right\"></span>\n            </button>\n            <p-dropdown [options]=\"rowsPerPageItems\" [(ngModel)]=\"rows\" *ngIf=\"rowsPerPageOptions\" styleClass=\"p-paginator-rpp-options\"\n                (onChange)=\"onRppChange($event)\" [appendTo]=\"dropdownAppendTo\" [scrollHeight]=\"dropdownScrollHeight\">\n                <ng-container *ngIf=\"dropdownItemTemplate\">\n                    <ng-template let-item pTemplate=\"item\">\n                        <ng-container *ngTemplateOutlet=\"dropdownItemTemplate; context: {$implicit: item}\">\n                        </ng-container>\n                    </ng-template>\n                </ng-container>\n            </p-dropdown>\n            <div class=\"p-paginator-right-content\" *ngIf=\"templateRight\">\n                <ng-container *ngTemplateOutlet=\"templateRight; context: {$implicit: paginatorState}\"></ng-container>\n            </div>\n        </div>\n    `,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    encapsulation: ViewEncapsulation.None,\n                    styleUrls: ['./paginator.css']\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }]; }, propDecorators: { pageLinkSize: [{\n                type: Input\n            }], onPageChange: [{\n                type: Output\n            }], style: [{\n                type: Input\n            }], styleClass: [{\n                type: Input\n            }], alwaysShow: [{\n                type: Input\n            }], templateLeft: [{\n                type: Input\n            }], templateRight: [{\n                type: Input\n            }], dropdownAppendTo: [{\n                type: Input\n            }], dropdownScrollHeight: [{\n                type: Input\n            }], currentPageReportTemplate: [{\n                type: Input\n            }], showCurrentPageReport: [{\n                type: Input\n            }], showFirstLastIcon: [{\n                type: Input\n            }], totalRecords: [{\n                type: Input\n            }], rows: [{\n                type: Input\n            }], rowsPerPageOptions: [{\n                type: Input\n            }], showJumpToPageDropdown: [{\n                type: Input\n            }], showPageLinks: [{\n                type: Input\n            }], dropdownItemTemplate: [{\n                type: Input\n            }], first: [{\n                type: Input\n            }] } });\nclass PaginatorModule {\n}\nPaginatorModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: PaginatorModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nPaginatorModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: PaginatorModule, declarations: [Paginator], imports: [CommonModule, DropdownModule, FormsModule, SharedModule, RippleModule], exports: [Paginator, DropdownModule, FormsModule, SharedModule] });\nPaginatorModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: PaginatorModule, imports: [[CommonModule, DropdownModule, FormsModule, SharedModule, RippleModule], DropdownModule, FormsModule, SharedModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: PaginatorModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule, DropdownModule, FormsModule, SharedModule, RippleModule],\n                    exports: [Paginator, DropdownModule, FormsModule, SharedModule],\n                    declarations: [Paginator]\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { Paginator, PaginatorModule };\n"]},"metadata":{},"sourceType":"module"}